!pip install pandas
!pip install numpy
!pip install seaborn
!pip install matplotlib

# Import necessary libraries
import pandas as pd 
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt 

#Importing the dataset
dataset = pd.read_csv('titanic.csv')
dataset.describe()

# Display the first few rows
print(dataset.head()) 

# Check for missing values
print("Missing values in each column:")
print(dataset.isnull().sum())
# Fill missing values in 'Age' with the mean
dataset['Age'].fillna(dataset['Age'].mean(), inplace=True)
# Fill missing values in 'Embarked' with the most common value
dataset['Embarked'].fillna(dataset['Embarked'].mode()[0], inplace=True)
# Drop rows where 'Cabin' is missing (too many NaNs)
dataset.drop(columns=['Cabin'], inplace=True)
# Verify missing values are handled
print("\nAfter handling missing values:")
print(dataset.isnull().sum()) 

# Fix inconsistent formatting in the 'Sex' column
dataset['Sex'] = dataset['Sex'].str.lower().str.strip()
# Verify unique values
print("\nUnique values in 'Sex' column after formatting:")
print(dataset['Sex'].unique())

# Boxplot for the 'Fare' column 
sns.boxplot(dataset['Fare'],color='skyblue') 
plt.title('Boxplot of Fare') 
plt.show()
# Detect outliers using the IQR method
Q1 = dataset['Fare'].quantile(0.25)
Q3 = dataset['Fare'].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
# Capping outliers
# Replacing 'data' with 'dataset' to ensure consistency
dataset['Fare'] = np.where(dataset['Fare'] > upper_bound, upper_bound, np.where(dataset['Fare'] < lower_bound, lower_bound, dataset['Fare']))
# Verify with an updated boxplot
# Replacing 'data' with 'dataset' to ensure consistency
sns.boxplot(dataset['Fare'], color='lightgreen')
plt.title('Boxplot of Fare (After Handling Outliers)')
plt.show() 
# Capping outliers - This section seems redundant, removing it
# data['Fare'] = np.where(data['Fare'] > upper_bound, upper_bound, np.where(data['Fare'] <
# lower_bound, lower_bound, data['Fare']))
# Verify with an updated boxplot - This section seems redundant, removing it
# sns.boxplot(data['Fare'], color='lightgreen')
# plt.title('Boxplot of Fare (After Handling Outliers)')
# plt.show()

# Save the cleaned dataset
dataset.to_csv('cleaned_titanic.csv', index=False)
print("\nCleaned dataset saved as 'cleaned_titanic.csv'")