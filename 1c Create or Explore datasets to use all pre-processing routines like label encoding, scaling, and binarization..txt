!pip install pandas
!pip install numpy
!pip install sklearn
!pip install matplotlib
!pip install sklearn.preprocessing
!pip install LabelEncoder
!pip install MinMaxScaler
!pip install StandardScaler
!pip install Binarizer

import pandas as pd
import numpy as np 
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import Binarizer

data = pd.DataFrame({
'Category': ['A', 'B', 'C', 'A', 'B', 'C'],
# Categorical variable
'Age': [23, 45, 31, 22, 35, 30],
# Numerical variable
'Income': [50000, 60000, 70000, 80000, 90000, 100000],
# Numerical variable 'Has_Car':
'Has_Car': ['Yes', 'No', 'Yes', 'No', 'Yes', 'No']
# Binary categorical variable 
                      })
# Display the dataset
print("Sample Dataset:")
print(data)
# Display the dataset
print("Sample Dataset:")
print(data)


# Label Encoding for 'Category' column
label_encoder = LabelEncoder()
data['Category_Encoded'] = label_encoder.fit_transform(data['Category'])
# Label Encoding for binary column 'Has_Car'
data['Has_Car_Encoded'] = label_encoder.fit_transform(data['Has_Car']) 
print("\nAfter Label Encoding:")
print(data)

# Min-Max Scaling for 'Income'
min_max_scaler = MinMaxScaler()
data['Income_MinMax'] = min_max_scaler.fit_transform(data[['Income']])

# Standard Scaling for 'Age'
standard_scaler = StandardScaler()
data['Age_Standardized'] = standard_scaler.fit_transform(data[['Age']]) 
print("\nAfter Scaling:")
print(data)

# Binarization for 'Income' with a threshold of 75,000
binarizer = Binarizer(threshold=75000)
data['Income_Binary'] = binarizer.fit_transform(data[['Income']]) 
print("\nAfter Binarization:")
print(data)


# Save the processed dataset
data.to_csv('processed_data.csv', index=False)
print("\nProcessed dataset saved as 'processed_data.csv'") 